npm init -y && npm i --save-dev node@20 && npm config set prefix=$(pwd)/node_modules/node && export PATH=$(pwd)/node_modules/node/bin:$PATH && rm -rf ./node_modules

client.api.applications(gtf.USERID).guilds(gtf.SERVERID).commands.post({
  data: {
    name: 'medal',
    description: 'Moderators Only | ...',
    options: [{
      "name": "medal",
      "description": "...",
      "type": 6,
      "required": true,
      "choices": [{
            "name": "1",
            "value": "0"
      }]
      }
      ]
}
})



curl -I https://discordapp.com/api/v10/gateway

module.exports.roulette = function(client, msg, emojis) {
  var channel = client.channels.cache.find(channel => channel.id === "866882594796601385");
  var chance = gtftools.randomInt(1, 200);
  // 10% chance
  if (chance <= 170) {
    return
  }
  if (msg.channel.id == "866882594796601385" && !require(gtf.MAIN).bot["roulettelimit"]) {
    var rnumber = gtftools.randomInt(0, 10)
    var loop = gtftools.randomInt(1, 6)
    var randomic = ["*", "**", "||", "_", "__"]
    randomic = randomic[Math.floor(Math.random() * randomic.length)]
    start(rnumber)
  }

  function start(rnumber) {

    function shuffle(string) {
        var parts = string.split('');
        for (var i = parts.length; i > 0;) {
          var random = parseInt(Math.random() * i);
          var temp = parts[--i];
          parts[i] = parts[random];
          parts[random] = temp;
        }
        return parts.join('');
      }


     require(gtf.MAIN).bot["roulettelimit"] = true
     console.log("Routlette " + rnumber)
    if (rnumber == 0) {
      var serveremojis = msg.guild.emojis.cache.map(e => e.toString())
      for (i = 0; i < loop; i++) {
        var emoji = serveremojis[Math.floor(Math.random() * serveremojis.length)].slice(2).slice(0, -1)
        emojis.unshift(emoji)
      }
    }
    if (rnumber == 1) {
      var serveremojis = msg.guild.emojis.cache.map(e => e.toString())
      var emoji = serveremojis[Math.floor(Math.random() * serveremojis.length)]
      gtftools.interval(function() {
      msg.channel.send({content:emoji})
     }, 1500, loop)
    }
    if (rnumber == 2) {
      setTimeout(() => msg.delete(), 0)
    }

    if (rnumber == 3) {
      msg.member.setNickname(shuffle(msg.member.nickname.toString()))
    }
    if (rnumber == 4) {
       gtftools.interval(function() {
      msg.author.send({content:"<@" + msg.author.id + ">"})
      }, 1500, loop)
    }
    if (rnumber == 5) {
      gtftools.interval(function() {
        msg.author.send({content:"<@" + msg.author.id + ">"})
      }, 1500, loop)
    }

    if (rnumber == 6) {
      var role = client.guilds.cache.get(gtf.SERVERID).roles.cache.find(r => r.name === "Muted");
      var user = msg.guild.members.cache.get(msg.author.id)
      user.roles.add(role).catch(console.error)
      setTimeout(function() {
        user.roles.remove(role).catch(console.error)
      }, 60 * 1000)
    }

    if (rnumber == 7) {
      gtftools.interval(function() {
        msg.channel.send({content:"<@" + msg.author.id + ">"})
      }, 1500, 3)
    }

    if (rnumber == 8) {
      gtftools.interval(function() {
        msg.channel.send({content:"<@" + msg.author.id + ">"})
        msg.author.send({content:"<@" + msg.author.id + ">"})
      }, 1500, 3)
    }

    if (rnumber == 9) {
      gtftools.interval(function() {
        msg.channel.send({content: randomic + msg.content + randomic})
      }, 1500, loop)
    }

    if (rnumber == 10) {
      gtftools.interval(function() {
        msg.channel.send({content: randomic + shuffle(msg.content) + randomic})
      }, 1500, loop)
    }
    
setTimeout(function() {
  require(gtf.MAIN).bot["roulettelimit"] = false
}, 1000 * 10)

  }
}

