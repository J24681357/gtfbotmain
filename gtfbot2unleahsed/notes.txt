npm init -y && npm i --save-dev node@20 && npm config set prefix=$(pwd)/node_modules/node && export PATH=$(pwd)/node_modules/node/bin:$PATH && rm -rf ./node_modules && npm install

///mm
B lv1 98
A lv5 90
IC lv10 80
IB lv20 60
A lv25 50
S lv30 35-25

C 8.000
B 8.000
A 10.000
IC 15. 
IB 20.000
IA 25.000 - 30
S 30 - 50

        {
            "name": "1 L",
            "value": "top_logo"
        },
        {
            "name": "1 L url",
            "value": "top_logo_url"
        },
                {
            "name": "2 L",
            "value": "middle_logo"
        },
        {
            "name": "2 L url",
            "value": "middle_logo_url"
        },
                {
            "name": "3 L",
            "value": "bottom_logo"
        },
        {
            "name": "3 L url",
            "value": "bottom_logo_url"
        }

var list = [
 
     "__**Lobby Matchmaking - /lobby**__" + "\n" + 
      "1. In this GTF game, you can compete against other players via lobby matchmaking in Discord threads." + "\n" +
      "__How To Create A Lobby__: You can create a lobby by using the command **/lobby - Host Lobby**. A new lobby will be created as a Discord thread and lobby messages will be sent inside that thread." + "\n" + 
      "You can view the lobby infomation (players, cars, etc) by using the command **/lobby - Lobby Info**." + "\n" +
      "In the lobby information screen, you are able to start the race (host only), change the lobby settings, and view the grid of players." + "\n"+
    "‚ö†Ô∏è Once you create a thread, most GTF commands will be limited (Ex. /career, /arcade, etc)." + "\n"+
    "‚ö†Ô∏è Certain lobby settings require you to input a number or name **in the slash command menu**, not in the lobby setting menus itself (Ex. Room Name & FPP Limit)." + "\n" +
      "__How To Join A Lobby__: You can search & select for any available lobbies by using **/lobby - Open Lobby Menu**." + "\n" +
 "When the success prompt appears after you select a lobby, the GTF bot will ping you inside the thread (this is where the joined lobby is located." + "\n" +
      "‚ö†Ô∏è Do not just join the thread, the GTF bot will not recognize you unless you do the above." + "\n" +
      "__How To Change Cars__: " + "You can change cars in a lobby via **/garage**." + "\n" +
      "Your garage will be filtered based on the current lobby settings. You can also change your tires here."
  
    ]

 


curl -I https://discordapp.com/api/v7/gateway


module.exports.removereactions = function (list, msg) {
  var i = 0;
  filter(i);
  function filter(i) {
    var emoji = msg.reactions.cache.find(r => r.emoji.name === list[i]);
    if (emoji == null) {
      increase();
    } else {
      emoji.remove(gtf.USERID);
      increase();
    }
  }

  function increase() {
    i++;
    if (i == list.length) {
      return;
    } else {
      setTimeout(function () {
        filter(i);
      }, 2000);
    }
  }

  gtftools.interval(
    function () {
      for (var index = 0; index < list.length; index++) {
        var emoji = msg.reactions.cache.find(r => r.emoji.name === list[index]);
        if (emoji == null) {
          continue;
        } else {
          emoji.remove(gtf.USERID);
        }
      }
    },
    1000 * list.length,
    1
  );
};


 /*
async function a() {
var Canvas = require("@napi-rs/canvas");
var colornames = ["Red", "Orange", "Yellow", "Green", "Blue", "Purple", "Brown", "Grey"]
for (var i = 0; i < colornames.length; i++) {
  var colorname = colornames[i]
var colorimage = "./images/gtauto/paint/" + colorname + ".png"

var width = 100
var height = 100
var canvas = await Canvas.createCanvas(width, height);
var context = await canvas.getContext('2d');


  /*
   context.fillStyle = "white";
   context.fillRect(0, 0, width, height);
   context.globalAlpha = 0.5;
   */

   context.fillStyle = "black";
   context.fillRect(0, 0, width, height);
   context.globalAlpha = 0.5;



context.drawImage(await Canvas.loadImage(colorimage), 0, 0, width, height);
  context.globalAlpha = 1;

  var file = await canvas.encode('png')
  console.log("Saved")
    fs.writeFile("./images/gtauto/paint/Dark " + colornames[i] + ".png", file, function (err) {
    if (err) {
      console.log(err);
    }
  });
}
}
a()

 "timetrial": {
    "name": "timetrial",
    "description": "N/A: Participate in time trials.",
    "options": [{
      "name": "options",
      "description": "Select an option.",
      "type": 3,
      "required": true,
      "choices": [{
            "name": "‚ùó Menu",
            "value": "list"
      },
      {
            "name": "Select Time Trial",
            "value": "select"
      },
      {
            "name": "Time Trial 1 Leaderboards",
            "value": "view1"
      },
      {
            "name": "Time Trial 2 Leaderboards",
            "value": "view2"
      },
      {
            "name": "Time Trial 3 Leaderboards",
            "value": "view3"
      }]
      },{
      "name": "number",
      "description": "Pick a number associated with the list in the menu.",
      "type": 4,
      "required": false
      }]
},


/*
 var index = 1
var a = [0]
var json = {
  "1": { "exp": 0, "rewards": [ "None" ] },
  "2": { "exp": 350, "rewards": [ "None" ] },
  "3": { "exp": 791, "rewards": [ "None" ] },
  "4": { "exp": 1325, "rewards": [ "None" ] },
  "5": { "exp": 1954,"rewards": [
      "Career Mode - Amateur",
      "Arcade Mode - Amateur",
      "Drift Trial - Beginner",
      "Level 5 Car Reward"
    ]
  },
  "6": { "exp": 2680, "rewards": [ "Accent Color - GT6" ] },
  "7": { "exp": 3505, "rewards": [ "None" ] },
  "8": {
    "exp": 4431,
    "rewards": [ "Special Stage Route X - Top Speed Run" ]
  },
  "9": { "exp": 5460, "rewards": [ "None" ] },
  "10": {
    "exp": 6594,
    "rewards": [ "Career Mode - IC League", "Level 10 Car Reward" ]
  },
  "11": { "exp": 7835, "rewards": [ "None" ] },
  "12": { "exp": 9185, "rewards": [ "None" ] },
  "13": { "exp": 10646, "rewards": [ "None" ] },
  "14": { "exp": 12220, "rewards": [ "None" ] },
  "15": { "exp": 13909,
  "rewards":  [
    "Career Mode - IB League",
  "Drift Trial - Professional",
  "Level 15 Car Reward"
  ] },
  "16": { "exp": 15715, "rewards": [ "Seasonal Events" ] },
  "17": { "exp": 17640, "rewards": [ "None" ] },
  "18": { "exp": 19686, "rewards": [ "None" ] },
  "19": { "exp": 21855, "rewards": [ "None" ] },
  "20": {"exp": 24149, "rewards": ["Career Mode - IA League","Arcade Mode - Professional", "Level 20 Car Reward"]},
  "21": { "exp": 26570, "rewards": [ "None" ] },
  "22": { "exp": 29120, "rewards": [ "None" ] },
  "23": { "exp": 31801, "rewards": [ "None" ] },
  "24": { "exp": 34615, "rewards": [ "None" ] },
  "25": { "exp": 37564, "rewards": [ "Career Mode - S League", "Level 25 Car Reward"] },
  "26": { "exp": 40650, "rewards": [ "None" ] },
  "27": { "exp": 43875, "rewards": [ "None" ] },
  "28": { "exp": 47241, "rewards": [ "None" ] },
  "29": { "exp": 50750, "rewards": [ "None" ] },
  "30": { "exp": 54404, "rewards": [ "Level 30 Car Reward" ] },
  "31": { "exp": 58205, "rewards": [ "None" ] },
  "32": { "exp": 62155, "rewards": [ "None" ] },
  "33": { "exp": 66256, "rewards": [ "None" ] },
  "34": { "exp": 70510, "rewards": [ "None" ] },
  "35": { "exp": 74919, "rewards": [ "None" ] },
  "36": { "exp": 79485, "rewards": [ "None" ] },
  "37": { "exp": 84210, "rewards": [ "None" ] },
  "38": { "exp": 89096, "rewards": [ "None" ] },
  "39": { "exp": 94145, "rewards": [ "None" ] },
  "40": { "exp": 99359, "rewards": [ "Level 40 Car Reward" ] },
  "41": { "exp": 104740, "rewards": [ "None" ] },
  "42": { "exp": 110290, "rewards": [ "None" ] },
  "43": { "exp": 116011, "rewards": [ "None" ] },
  "44": { "exp": 121905, "rewards": [ "None" ] },
  "45": { "exp": 127974, "rewards": [ "None" ] },
  "46": { "exp": 134220, "rewards": [ "None" ] },
  "47": { "exp": 140645, "rewards": [ "None" ] },
  "48": { "exp": 147251, "rewards": [ "None" ] },
  "49": { "exp": 154040, "rewards": [ "None" ] },
  "50": { "exp": 161014, "rewards": [ "Level 50 Car Reward" ] }
}
var divider = 4
for (index; index < 50; index++) {
  if (index == 1) {
    json[(index+1).toString()]["exp"] = 350
 } else if (index >= 23)  {
   divider = 5
   if (index >= 24) {
     json[(index+1).toString()]["exp"] = Math.round( ((1.2*(Math.pow(index,1.2)) * (450 * index) + 350) / divider) )
   } else {
   json[(index+1).toString()]["exp"] = Math.round( ((1.2*(Math.pow(index,1.1)) * (450 * index) + 350) / divider) )
   }
} else {
   if ((index+1) % 10 == 1) {
     divider--
     if (divider == 0) {
       divider = 1
     }
   }
json[(index+1).toString()]["exp"] = Math.round( (1.2*(Math.pow(index,0.7))* (450 * index) + 350) / divider)
}
}
console(json)
*/

  "lobby": {
    "name": "lobby",
    "description": "(UNAVAILABLE) üèÅ Race with other people across the world in lobbies.",
    "channels": "",
    "options": [
      {
        "name": "options",
        "description": "Select an option.",
        "type": 3,
        "required": true,
        "choices": [
          {
            "name": "‚ùó Open Lobby Menu",
            "value": "list"
          },
          {
            "name": "‚ùó Open Garage",
            "value": "garage"
          },
          {
            "name": "Host Lobby (Fixed Host)",
            "value": "host"
          },
          {
            "name": "üåê Lobby Info",
            "value": "info"
          },
          {
            "name": "üåê Start Race (Host Only)",
            "value": "race"
          },
          {
            "name": "üåê Change Room Settings (Host) [settings|regulations]",
            "value": "set"
          },
          {
            "name": "üåê Exit",
            "value": "exit"
          }
        ]
      },
      {
        "name": "settings",
        "description": "Select a type of current lobby setting to change.",
        "type": 3,
        "required": false,
        "choices": [
          {
            "name": "Room Name [name]",
            "value": "roomname"
          },
          {
            "name": "Track",
            "value": "track"
          },
          {
            "name": "Laps",
            "value": "laps"
          },
          {
            "name": "Time",
            "value": "time"
          },
          {
            "name": "Weather",
            "value": "weather"
          },
          {
            "name": "Surface Water",
            "value": "wetsurface"
          }
        ]
      },
      {
        "name": "regulations",
        "description": "Set regulations of current lobby.",
        "type": 3,
        "required": false,
        "choices": [
          {
            "name": "FPP Limit [number]",
            "value": "fpplimit"
          },
          {
            "name": "Power Limit [number]",
            "value": "powerlimit"
          },
          {
            "name": "Weight Limit [number]",
            "value": "weightlimit"
          },
          {
            "name": "Makes",
            "value": "makes"
          },
          {
            "name": "Engine Aspiration",
            "value": "engines"
          },
          {
            "name": "Drivetrains",
            "value": "drivetrains"
          },
          {
            "name": "Maximum Tire Grade",
            "value": "tires"
          }
        ]
      },
      {
        "name": "name",
        "description": "The name argument.",
        "type": 3,
        "required": false
      },
      {
        "name": "number",
        "description": "The number argument.",
        "type": 4,
        "required": false
      }
    ]
  },

  ///enthusia

  [ 'alfa-romeo', 'alpine', 'aston-martin', 'audi','bmw', 'bugatti', 'cadillac', 'caterham', 'chevrolet', 'chrysler', 'citroen', 'daihatsu', 'de-tomaso', 'dodge',  'fiat', 'ford', 'honda', 'hyundai', 'jaguar', 'lancia', 'land-rover', 'lotus', 'mazda', 'mercedes-benz', 'mini', 'mitsubishi', 'nismo', 'nissan','opel', 'peugeot', 'pontiac', 'porsche', 'renault', 'ruf',  'shelby', 'smart', 'subaru', 'suzuki',  'tommykaira', 'toyota', 'tvr', 'volkswagen', 'volvo' ]